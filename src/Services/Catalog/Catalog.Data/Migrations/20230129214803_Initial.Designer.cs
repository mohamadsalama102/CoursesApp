// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using nagiashraf.CoursesApp.Services.Catalog.Data;

#nullable disable

namespace nagiashraf.CoursesApp.Services.Catalog.Data.Migrations
{
    [DbContext(typeof(CourseContext))]
    [Migration("20230129214803_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("nagiashraf.CoursesApp.Services.Catalog.Core.Entities.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Biography")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Headline")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhotoPublicId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhotoUrl")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ApplicationUsers");
                });

            modelBuilder.Entity("nagiashraf.CoursesApp.Services.Catalog.Core.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("nagiashraf.CoursesApp.Services.Catalog.Core.Entities.Course", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<double>("AverageRating")
                        .HasColumnType("float");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InstructorId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("IsPublished")
                        .HasColumnType("bit");

                    b.Property<bool>("IsRejected")
                        .HasColumnType("bit");

                    b.Property<bool>("IsUnderAdminReview")
                        .HasColumnType("bit");

                    b.Property<string>("Language")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Level")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("RatingsCount")
                        .HasColumnType("int");

                    b.Property<string>("Requirements")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StudentsCount")
                        .HasColumnType("int");

                    b.Property<int>("SubCategoryId")
                        .HasColumnType("int");

                    b.Property<string>("SubTitle")
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("Topic")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<double>("TotalHours")
                        .HasColumnType("float");

                    b.Property<string>("WhatYouWillLearn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WhoIsThisCourseFor")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("InstructorId");

                    b.HasIndex("SubCategoryId");

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("nagiashraf.CoursesApp.Services.Catalog.Core.Entities.CoursePreviewVideo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<double?>("Duration")
                        .HasColumnType("float");

                    b.Property<string>("PublicId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CourseId")
                        .IsUnique();

                    b.ToTable("CoursePreviewVideos");
                });

            modelBuilder.Entity("nagiashraf.CoursesApp.Services.Catalog.Core.Entities.DownloadableFile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("FileUrlPath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LectureId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LectureId");

                    b.ToTable("DownloadableFiles");
                });

            modelBuilder.Entity("nagiashraf.CoursesApp.Services.Catalog.Core.Entities.Lecture", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Order")
                        .HasColumnType("int");

                    b.Property<int>("SectionId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.HasKey("Id");

                    b.HasIndex("SectionId");

                    b.HasIndex("Order", "SectionId")
                        .IsUnique()
                        .HasFilter("[Order] IS NOT NULL");

                    b.ToTable("Lectures");
                });

            modelBuilder.Entity("nagiashraf.CoursesApp.Services.Catalog.Core.Entities.LectureVideo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<double>("Duration")
                        .HasColumnType("float");

                    b.Property<int>("LectureId")
                        .HasColumnType("int");

                    b.Property<string>("PublicId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("LectureId")
                        .IsUnique();

                    b.ToTable("LectureVideos");
                });

            modelBuilder.Entity("nagiashraf.CoursesApp.Services.Catalog.Core.Entities.Picture", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<string>("PublicId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CourseId")
                        .IsUnique();

                    b.ToTable("Pictures");
                });

            modelBuilder.Entity("nagiashraf.CoursesApp.Services.Catalog.Core.Entities.Question", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Order")
                        .HasColumnType("int");

                    b.Property<int>("QuizId")
                        .HasColumnType("int");

                    b.Property<int?>("RelatedLectureId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("QuizId");

                    b.HasIndex("RelatedLectureId");

                    b.HasIndex("Order", "QuizId")
                        .IsUnique()
                        .HasFilter("[Order] IS NOT NULL");

                    b.ToTable("Questions");
                });

            modelBuilder.Entity("nagiashraf.CoursesApp.Services.Catalog.Core.Entities.Quiz", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SectionId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.HasKey("Id");

                    b.HasIndex("SectionId");

                    b.ToTable("Quizzes");
                });

            modelBuilder.Entity("nagiashraf.CoursesApp.Services.Catalog.Core.Entities.Rating", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<int>("RatingValue")
                        .HasColumnType("int");

                    b.Property<string>("Review")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StudentId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.HasIndex("StudentId");

                    b.ToTable("Ratings");
                });

            modelBuilder.Entity("nagiashraf.CoursesApp.Services.Catalog.Core.Entities.Section", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<string>("LearningObjective")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("Order")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.HasIndex("Order", "CourseId")
                        .IsUnique()
                        .HasFilter("[Order] IS NOT NULL");

                    b.ToTable("Sections");
                });

            modelBuilder.Entity("nagiashraf.CoursesApp.Services.Catalog.Core.Entities.StudentCourse", b =>
                {
                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<string>("StudentId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("CourseId", "StudentId");

                    b.HasIndex("StudentId");

                    b.ToTable("StudentCourses");
                });

            modelBuilder.Entity("nagiashraf.CoursesApp.Services.Catalog.Core.Entities.SubCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("SubCategories");
                });

            modelBuilder.Entity("nagiashraf.CoursesApp.Services.Catalog.Core.Entities.Subtitle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Language")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("VideoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("VideoId");

                    b.ToTable("Subtitles");
                });

            modelBuilder.Entity("nagiashraf.CoursesApp.Services.Catalog.Core.Entities.Course", b =>
                {
                    b.HasOne("nagiashraf.CoursesApp.Services.Catalog.Core.Entities.ApplicationUser", "Instructor")
                        .WithMany("CreatedCourses")
                        .HasForeignKey("InstructorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("nagiashraf.CoursesApp.Services.Catalog.Core.Entities.SubCategory", "SubCategory")
                        .WithMany("Courses")
                        .HasForeignKey("SubCategoryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.OwnsOne("nagiashraf.CoursesApp.Services.Catalog.Core.Entities.Discount", "Discount", b1 =>
                        {
                            b1.Property<int>("CourseId")
                                .HasColumnType("int");

                            b1.Property<decimal>("Amount")
                                .HasPrecision(18, 2)
                                .HasColumnType("decimal(18,2)");

                            b1.Property<DateTime?>("EndDateUtc")
                                .HasColumnType("datetime2");

                            b1.Property<bool>("IsActive")
                                .HasColumnType("bit");

                            b1.Property<double>("Percentage")
                                .HasColumnType("float");

                            b1.Property<DateTime?>("StartDateUtc")
                                .HasColumnType("datetime2");

                            b1.Property<bool>("UsePercentage")
                                .HasColumnType("bit");

                            b1.HasKey("CourseId");

                            b1.ToTable("Courses");

                            b1.WithOwner()
                                .HasForeignKey("CourseId");
                        });

                    b.Navigation("Discount")
                        .IsRequired();

                    b.Navigation("Instructor");

                    b.Navigation("SubCategory");
                });

            modelBuilder.Entity("nagiashraf.CoursesApp.Services.Catalog.Core.Entities.CoursePreviewVideo", b =>
                {
                    b.HasOne("nagiashraf.CoursesApp.Services.Catalog.Core.Entities.Course", "Course")
                        .WithOne("PreviewVideo")
                        .HasForeignKey("nagiashraf.CoursesApp.Services.Catalog.Core.Entities.CoursePreviewVideo", "CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");
                });

            modelBuilder.Entity("nagiashraf.CoursesApp.Services.Catalog.Core.Entities.DownloadableFile", b =>
                {
                    b.HasOne("nagiashraf.CoursesApp.Services.Catalog.Core.Entities.Lecture", "Lecture")
                        .WithMany("DownloadableFiles")
                        .HasForeignKey("LectureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Lecture");
                });

            modelBuilder.Entity("nagiashraf.CoursesApp.Services.Catalog.Core.Entities.Lecture", b =>
                {
                    b.HasOne("nagiashraf.CoursesApp.Services.Catalog.Core.Entities.Section", "Section")
                        .WithMany("Lectures")
                        .HasForeignKey("SectionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Section");
                });

            modelBuilder.Entity("nagiashraf.CoursesApp.Services.Catalog.Core.Entities.LectureVideo", b =>
                {
                    b.HasOne("nagiashraf.CoursesApp.Services.Catalog.Core.Entities.Lecture", "Lecture")
                        .WithOne("Video")
                        .HasForeignKey("nagiashraf.CoursesApp.Services.Catalog.Core.Entities.LectureVideo", "LectureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Lecture");
                });

            modelBuilder.Entity("nagiashraf.CoursesApp.Services.Catalog.Core.Entities.Picture", b =>
                {
                    b.HasOne("nagiashraf.CoursesApp.Services.Catalog.Core.Entities.Course", "Course")
                        .WithOne("Picture")
                        .HasForeignKey("nagiashraf.CoursesApp.Services.Catalog.Core.Entities.Picture", "CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");
                });

            modelBuilder.Entity("nagiashraf.CoursesApp.Services.Catalog.Core.Entities.Question", b =>
                {
                    b.HasOne("nagiashraf.CoursesApp.Services.Catalog.Core.Entities.Quiz", "Quiz")
                        .WithMany("Questions")
                        .HasForeignKey("QuizId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("nagiashraf.CoursesApp.Services.Catalog.Core.Entities.Lecture", "RelatedLecture")
                        .WithMany()
                        .HasForeignKey("RelatedLectureId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.OwnsMany("nagiashraf.CoursesApp.Services.Catalog.Core.Entities.Answer", "Answers", b1 =>
                        {
                            b1.Property<int?>("Order")
                                .HasColumnType("int");

                            b1.Property<int>("QuestionId")
                                .HasColumnType("int");

                            b1.Property<string>("Content")
                                .IsRequired()
                                .HasMaxLength(600)
                                .HasColumnType("nvarchar(600)");

                            b1.Property<string>("Explanation")
                                .HasMaxLength(600)
                                .HasColumnType("nvarchar(600)");

                            b1.Property<bool>("IsCorrect")
                                .HasColumnType("bit");

                            b1.HasKey("Order", "QuestionId");

                            b1.HasIndex("QuestionId");

                            b1.ToTable("Answers", (string)null);

                            b1.WithOwner("Question")
                                .HasForeignKey("QuestionId");

                            b1.Navigation("Question");
                        });

                    b.Navigation("Answers");

                    b.Navigation("Quiz");

                    b.Navigation("RelatedLecture");
                });

            modelBuilder.Entity("nagiashraf.CoursesApp.Services.Catalog.Core.Entities.Quiz", b =>
                {
                    b.HasOne("nagiashraf.CoursesApp.Services.Catalog.Core.Entities.Section", "Section")
                        .WithMany("Quizzes")
                        .HasForeignKey("SectionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Section");
                });

            modelBuilder.Entity("nagiashraf.CoursesApp.Services.Catalog.Core.Entities.Rating", b =>
                {
                    b.HasOne("nagiashraf.CoursesApp.Services.Catalog.Core.Entities.Course", "Course")
                        .WithMany("Ratings")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("nagiashraf.CoursesApp.Services.Catalog.Core.Entities.ApplicationUser", "Student")
                        .WithMany("Ratings")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("nagiashraf.CoursesApp.Services.Catalog.Core.Entities.Section", b =>
                {
                    b.HasOne("nagiashraf.CoursesApp.Services.Catalog.Core.Entities.Course", "Course")
                        .WithMany("Sections")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");
                });

            modelBuilder.Entity("nagiashraf.CoursesApp.Services.Catalog.Core.Entities.StudentCourse", b =>
                {
                    b.HasOne("nagiashraf.CoursesApp.Services.Catalog.Core.Entities.Course", "Course")
                        .WithMany("StudentCourses")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("nagiashraf.CoursesApp.Services.Catalog.Core.Entities.ApplicationUser", "Student")
                        .WithMany("StudentCourses")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("nagiashraf.CoursesApp.Services.Catalog.Core.Entities.SubCategory", b =>
                {
                    b.HasOne("nagiashraf.CoursesApp.Services.Catalog.Core.Entities.Category", "Category")
                        .WithMany("SubCategories")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("nagiashraf.CoursesApp.Services.Catalog.Core.Entities.Subtitle", b =>
                {
                    b.HasOne("nagiashraf.CoursesApp.Services.Catalog.Core.Entities.LectureVideo", "Video")
                        .WithMany("Subtitles")
                        .HasForeignKey("VideoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Video");
                });

            modelBuilder.Entity("nagiashraf.CoursesApp.Services.Catalog.Core.Entities.ApplicationUser", b =>
                {
                    b.Navigation("CreatedCourses");

                    b.Navigation("Ratings");

                    b.Navigation("StudentCourses");
                });

            modelBuilder.Entity("nagiashraf.CoursesApp.Services.Catalog.Core.Entities.Category", b =>
                {
                    b.Navigation("SubCategories");
                });

            modelBuilder.Entity("nagiashraf.CoursesApp.Services.Catalog.Core.Entities.Course", b =>
                {
                    b.Navigation("Picture")
                        .IsRequired();

                    b.Navigation("PreviewVideo")
                        .IsRequired();

                    b.Navigation("Ratings");

                    b.Navigation("Sections");

                    b.Navigation("StudentCourses");
                });

            modelBuilder.Entity("nagiashraf.CoursesApp.Services.Catalog.Core.Entities.Lecture", b =>
                {
                    b.Navigation("DownloadableFiles");

                    b.Navigation("Video")
                        .IsRequired();
                });

            modelBuilder.Entity("nagiashraf.CoursesApp.Services.Catalog.Core.Entities.LectureVideo", b =>
                {
                    b.Navigation("Subtitles");
                });

            modelBuilder.Entity("nagiashraf.CoursesApp.Services.Catalog.Core.Entities.Quiz", b =>
                {
                    b.Navigation("Questions");
                });

            modelBuilder.Entity("nagiashraf.CoursesApp.Services.Catalog.Core.Entities.Section", b =>
                {
                    b.Navigation("Lectures");

                    b.Navigation("Quizzes");
                });

            modelBuilder.Entity("nagiashraf.CoursesApp.Services.Catalog.Core.Entities.SubCategory", b =>
                {
                    b.Navigation("Courses");
                });
#pragma warning restore 612, 618
        }
    }
}
